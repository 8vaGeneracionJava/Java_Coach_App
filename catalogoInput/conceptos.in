1;1;Atributos;Los atributos, también llamados datos o variables, son porciones de informacion que un objeto posee o conoce de si mismo. Una clase puede tener cualquier numero de atributos o no tener ninguno. Se declaran con un identificador y el tipo de dato correspondiente.\nLos atributos son las caracteristicas individuales que diferencian un objeto de otro y determinan su apariencia, estado u otras cualidades.\nAdemás los atributos y tienen asociado un modificador que define su visibilidad segï¿½n se muestra en la siguiente tabla.\n\nModificador\tVisibilidad\npublic\t\tPublica (+)\nprotected\tProtegida/en la herencia (#)\nprivate\t\tPrivada (-)\npackage\t\tDe paquete (~)\n
1;2;Metodos;Los metodos son bloques de codigo que se pueden llamar para evitar reutilizar codigo.
1;3;Comentarios;Es texto dentro del codigo que no se ejecuta. Sirve para aclarar funcionamiento del mismo.
1;4;Clases;Las clases son planos de construccion. Todos los nombres de las clases deben ser con mayuscula.\n Cuando definimos una clase, se describen todas las caracteristicas de esta.\n Para darle uso a una clase se tiene que crear/instanciar un objeto.\n Las clases tienen dos elementos importantes que la definen: los atributos y los metodos o funciones.
1;5;Metodo Main; Una aplicacion de Java esta¡ definida como una clase la cual contiene el metodo main. El metodo main tiene la funcion especial de ser el punto de arranque de un programa y es lo que diferencia una clase comun y corriente de una aplicacion
1;6;Comodines (Wildcards);El asterisco (*) es un wildcard (comodín) que se usa como atajo para importar todas las clases de un paquete.
1;7;Importaciones redundantes (Redundant imports); Una declaración de importación es considerada redundante cuando: _Una clase es importada mas de una vez. _La clase importada pertenece al paquete java.lang. _La clase importada es del mismo paquete que el paquete actual.
1;8;Conflicto de nombres (Naming conflicts); Se genera un conflicto de nombres cuando se importan clases con el mismo nombre pero de diferentes paquetes. A la hora de usarlas es necesario romper con la ambiguedad que se crea al tener el mismo identificador usando su nombre completo.
1;9;Paquetes (Creating a new package); Un paquete es un contenedor de clases que permite agrupar las distintas partes de un programa. Un paquete se genera incluyendo la pablabra clave package al inicio de los módulos de código en los que se definen las clases que formarán parte del mismo.
1;10;Constructores; Un constructor es un método especial de una clase que se llama automáticamente siempre que se declara un objeto de esa clase. Su función es inicializar el objeto y sirve para asegurarnos que los objetos siempre contengan valores válidos.
2;1;Operadores (Understanding Java operators); Un operador lleva a cabo operaciones entre uno (operador unario), dos (operador binario) o tres (operador ternario) datos u operandos devolviendo un valor determinado.
2;2;Operadores aritméticos (Arithmetic operators); Los operadores aritméticos permiten realizar operaciones matemáticas: + suma, - resta, / división, * multiplicación y % módulo (resto).
2;3;Promoción numérica (Numeric promotion); Al realizar una operación entre valores que tienen diferentes tipos de datos, Java automáticamente promoverá uno de los valores al mayor de los dos tipos de datos. Si uno de los valores es int y el otro es float, promoverá el valor int al tipo de dato float. Los tipos de datos byte, short y char, se promueven a int incluso si ninguno de los operandos es de tipo entero.	Después de que se haya producido la promoción el valor resultante tendrá el mismo tipo de dato que sus operandos promocionados.
